import xlwings as xw
import pandas as pd
import tkinter as tk
from tkinter.filedialog import askopenfilename, asksaveasfilename

def select_file(title, file_types):
    root = tk.Tk()
    root.withdraw()
    selected_file = askopenfilename(title=title, filetypes=file_types)
    root.destroy()
    return selected_file

def process_data_workbook(data_path, target_sheet_name, template_wb):
    target_sheet = template_wb.sheets[target_sheet_name]
    if data_path.endswith('.csv'):
        data_df = pd.read_csv(data_path)
    else:
        data_df = pd.read_excel(data_path)

    target_last_row = target_sheet.range('A' + str(target_sheet.cells.last_cell.row)).end('up').row
    start_row = 2 if target_last_row < 2 else target_last_row + 1
    target_sheet.range(f'A{start_row}').options(index=False, expand='table').value = data_df[1:]  # Exclude header row

def main():
    template_path = select_file("Select Template Workbook", [("Excel files", "*.xlsm")])
    if not template_path:
        return

    template_wb = xw.Book(template_path)
    sheet_names = [sheet.name for sheet in template_wb.sheets]

    # Assign data workbooks and target sheets
    data_path1 = select_file("Select Data Workbook 1", [("Excel/CSV files", "*.xlsx;*.xlsm;*.csv")])
    target_sheet_name1 = "YourTargetSheet1"  # Specify your target sheet name

    data_path2 = select_file("Select Data Workbook 2", [("Excel/CSV files", "*.xlsx;*.xlsm;*.csv")])
    target_sheet_name2 = "YourTargetSheet2"  # Specify your target sheet name

    data_path3 = select_file("Select Data Workbook 3", [("Excel/CSV files", "*.xlsx;*.xlsm;*.csv")])
    target_sheet_name3 = "YourTargetSheet3"  # Specify your target sheet name

    # Process each data workbook
    if data_path1:
        process_data_workbook(data_path1, target_sheet_name1, template_wb)
    if data_path2:
        process_data_workbook(data_path2, target_sheet_name2, template_wb)
    if data_path3:
        process_data_workbook(data_path3, target_sheet_name3, template_wb)

    # Run a specific macro
    macro_name = "YourMacroName"  # Replace with your macro's name
    if macro_name in template_wb.macro_names:
        template_wb.macro(macro_name)()
    else:
        print(f"Macro '{macro_name}' not found.")

    save_path = asksaveasfilename(title="Save Modified Workbook As", defaultextension=".xlsm", filetypes=[("Excel files", "*.xlsm")])
    if save_path:
        template_wb.save(save_path)

if __name__ == "__main__":
    main()
